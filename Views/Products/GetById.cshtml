@using WebShopMVC.Data.Models
@using WebShopMVC.Models.DTO
@using WebShopMVC.Models.Utils
@using WebShopMVC.Models.Views
@using WebShopMVC.Services

@model ProductViewModel
@inject IReviewService reviewService

@{
    Product product = Model.Product;
}

<p class="fs-4">Product Information</p>
<hr />

<p>
    <b>Product Name:</b>
    <br />
    @product.Name
</p>
<p>
    <b>Product Description:</b>
    <br />
    @if (product.Description is not null)
    {
        <text>@product.Description</text>
    }
    else
    {
        <i class="text-secondary">Description is empty...</i>
    }
</p>
<p>
    <b>Product Price:</b>
    <br />
    @product.Price
</p>

@{
    IList<Review> reviews = reviewService.GetReviewsByProductId(product.Id);
}

@if (reviews.Count > 0)
{
    <hr />
    <p class="fs-4">Products List</p>
    <hr />

    @foreach (Review review in reviews)
    {
        <div class="card mb-3">
            <div class="card-header">
                <span>
                    <b>Автор отзыва</b>: @review.Author
                </span>
            </div>
            <div class="card-body">
                <span>
                    @review.Text
                </span>
            </div>
        </div>
    }
}

@if (Model.Review is not null)
{
    <p class="fs-4">Leave a review about the product</p>
    <hr />

    @using (Html.BeginForm("CreateReview", "Products", new { id = product.Id }))
    {
        ReviewDTO review = Model.Review;

        <div class="mb-3">
            @Html.LabelFor(model => review.Author, htmlAttributes: new { @class = "form-label" })
            @Html.EditorFor(model => review.Author, new {
                htmlAttributes = new { @class = "form-control"}
            })
            @Html.ValidationMessageFor(model => review.Author, "", new { @class = "text-danger" })
        </div>
        <div class="mb-3">
            @Html.LabelFor(model => review.Text, htmlAttributes: new { @class = "form-label" })
            @Html.EditorFor(model => review.Text, new {
                htmlAttributes = new { @class = "form-control" }
            })
            @Html.ValidationMessageFor(model => review.Text, "", new { @class = "text-danger" })
        </div>
        <div class="mb-3">
            <button class="btn btn-primary" type="submit">
                Leave a review
            </button>
        </div>
    }
}